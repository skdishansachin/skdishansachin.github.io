---
import BaseHead from "../../components/BaseHead.astro";
import Header from "../../components/Header.astro";
import { SITE_DESCRIPTION } from "../../consts";
import { getCollection } from "astro:content";
import FormattedDate from "../../components/FormattedDate.astro";
import Nav from "../../components/Nav.astro";

const posts = (await getCollection("blog"))
  .sort((b: any, a: any) => a.data.pubDate.valueOf() - b.data.pubDate.valueOf())
  .filter((post: any) => !post.data.draft);

const uniqueTags = [
  ...new Set(
    posts
      .flatMap((post: any) => post.data.tags)
      .filter((tag: any) => tag !== undefined),
  ),
].sort();
---

<!doctype html>
<html lang="en">
  <head>
    <BaseHead title="Blog" description={SITE_DESCRIPTION} />
  </head>
  <body>
    <Header>
      <Nav />
    </Header>
    <main>
      <input id="search" type="text" placeholder="Search..." />
      <ul class="blog-posts">
        {
          posts.map((post: any) => (
            <li data-title={post.data.title.toLowerCase()}>
              <span>
                <i>
                  <FormattedDate date={post.data.pubDate} />
                </i>
              </span>
              <a href={`/blog/${post.slug}/`}>{post.data.title}</a>
            </li>
          ))
        }
      </ul>
      <div class="tags">
        {
          uniqueTags.map((tag: any) => (
            <a class="tag" href={`/tags/${tag}/`}>
              #{tag}
            </a>
          ))
        }
      </div>
    </main>
    <script is:inline>
      const blogPosts = document.querySelectorAll(".blog-posts li");

      document.querySelector("#search")?.addEventListener("input", (e) => {
        const query = e.target.value.toLowerCase();

        blogPosts.forEach((post) => {
          const title = post.dataset.title;
          if (title.includes(query)) {
            post.style.display = "list-item";
          } else {
            post.style.display = "none";
          }
        });
      });
    </script>
  </body>
</html>
